#include <linux/module.h>
#include <linux/printk.h>
#include <linux/kobject.h>
#include <linux/sysfs.h>
#include <linux/init.h>
#include <linux/fs.h>
#include <linux/string.h>
#include <linux/kernel.h>
#include <linux/sched.h>

static struct kobject *;
volatile int roots = 0;

static ssize_t foo_show(struct kobject *kobj, struct kobj_attribute *attr, char *buf) {
	return sprintf(buf, "Hello World!\n");
}

struct kobj_attribute foo_attribute = __ATTR(foo, 0660, foo_show, NULL);

static int __init mymodule_init (void) {

	int error = 0;

	team15_02_89_object = kobject_create_and_add("team15_02_89", kernel_kobj);

	if (!team15_02_89_object)
		return -ENOMEM;

	error = sysfs_create_file(team15_02_89_object, &foo_attribute.attr);

	if (error) {
		printk("failed to create the foo file in /sys/kernel/kobject_example \n");
	}

	return error;
}


static void __exit mymodule_exit(void) {

	printk("Module un initialized successfully \n");
	kobject_put(team15_02_89_object);

}

module_init(mymodule_init);
module_exit(mymodule_exit);
MODULE_LICENSE("GPL");





}











}
